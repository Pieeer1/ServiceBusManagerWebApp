@page "/detailView"
@using Azure.Messaging.ServiceBus.Administration;
@inject IConnectionManager _connectionManager;
@inject IServiceBusClientAdminManager _serviceBusClientAdminManager;


<div class="container text-center">
    <h1>Details</h1>

    @if (_activeServiceBusConnections.Any())
    {
        <h3>Active Connection:</h3>
        <FormSelect TItem="ServiceBusConnectionViewModel" Items="_activeServiceBusConnections" Selector="(x => x.Name)" ValueChanged="(s) => SetActiveConnection(s.Name)"></FormSelect>
        @if (_activeTopics is null)
        {
            <div><Spinner></Spinner></div>
        }
        else
        {
            <h4>Active Topic</h4>
            <FormSelect TItem="TopicProperties" Items="_activeTopics" Selector="(x => x.Name)" ValueChanged="() => {}"></FormSelect>
        }
    }
    else
    {
        <div>No Active Connections Found</div>
        <NavLink class="nav-link" href="manageConnections">
            <span class="oi oi-list-rich" aria-hidden="true"></span> Add Connections
        </NavLink>
    }
</div>

@code {
    private List<ServiceBusConnectionViewModel> _activeServiceBusConnections = null!;
    private List<TopicProperties>? _activeTopics;

    protected override async Task OnInitializedAsync()
    {
        _activeServiceBusConnections = _connectionManager.GetServiceBusConnections().ToList();
        if (_activeServiceBusConnections.Any())
        {
            await SetActiveConnection(_activeServiceBusConnections.First().Name);
        }
    }

    private async Task SetActiveConnection(string name)
    {
        _activeTopics = null; // no matter what reset value of _activeTopics, triggers the @onChange in the input form
        _serviceBusClientAdminManager.SetActiveConnection(name);
        await GetTopicsFromActiveConnection();
    }
    private async Task GetTopicsFromActiveConnection()
    {
        _activeTopics = (await _serviceBusClientAdminManager.GetTopics()).ToList();
    }
}
