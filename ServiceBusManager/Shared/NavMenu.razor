@inject IConfiguration _configuration;
@inject IHotkeyManager _hotkeyManager;
@inject NavigationManager _navigationManager;
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Service Bus Manager<div class="environment-label">@GetEnvironmentString()</div></a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="manageConnections">
                <span class="oi oi-plus" aria-hidden="true"></span> Manage Connections
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="detailView">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Detail View
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _hotkeyManager.RegisterHotkey(() => _navigationManager.NavigateTo(""), ComponentDetached, Key.Control, Key.Num1);
            _hotkeyManager.RegisterHotkey(() => _navigationManager.NavigateTo("manageConnections"), ComponentDetached, Key.Control, Key.Num2);
            _hotkeyManager.RegisterHotkey(() => _navigationManager.NavigateTo("detailView"), ComponentDetached, Key.Control, Key.Num3);
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private string? GetEnvironmentString()
    {
        return _configuration.GetSection("EnvironmentSettings:Environment").Value?.ToLower() == "production" ? string.Empty : _configuration.GetSection("EnvironmentSettings:Environment").Value;
    }
}
